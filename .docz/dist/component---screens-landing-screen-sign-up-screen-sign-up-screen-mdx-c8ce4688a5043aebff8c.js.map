{"version":3,"sources":["webpack:///../screens/LandingScreen/SignUpScreen/SignUpScreen.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"uPAQaA,G,UAAe,S,qOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,6VACA,iBAAQ,CACN,GAAM,yBADR,4BAGA,uBACA,4CACA,uBACA,2BACA,gSAEA,2BACA,iBAAQ,CACN,GAAM,gDADR,mDAGA,uBACA,0CACA,uBACA,2BACA,4EACA,2BACA,iBAAQ,CACN,GAAM,iBADR,mBAGA,uBACA,sCACA,yCACA,6B,mOAKJH,EAAWI,gBAAiB","file":"component---screens-landing-screen-sign-up-screen-sign-up-screen-mdx-c8ce4688a5043aebff8c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/valle/BingeWatch/bingewatch-frontend/BingeWatch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sign-up-screen\"\n    }}>{`Sign up Screen`}</h1>\n    <p>{`The sign up screen is used to help a user register to the app. The user is provided with three input fields, email, password and confirm password. When you press the \"Sign Up\" button the app will proceed to create an account with the provided data. If account creation is successful the user is navigated to the next screen.`}</p>\n    <h2 {...{\n      \"id\": \"onsubmitdata-formdata\"\n    }}>{`onSubmit(data: FormData)`}</h2>\n    <hr></hr>\n    <p>{`Parameter: FormData`}</p>\n    <hr></hr>\n    <p>{`//`}</p>\n    <p>{`This function takes the FormData provided and attempts to create a user account on Firebase. If it is successful it calls the createUserAndWatchlistInDatabase() function and after that navigates to the next screen.\nIf it is unsuccessful it cancels the procedure.`}</p>\n    <p>{`//`}</p>\n    <h2 {...{\n      \"id\": \"createuserandwatchlistindatabaseemail-string\"\n    }}>{`createUserAndWatchlistInDatabase(email: String)`}</h2>\n    <hr></hr>\n    <p>{`Parameter: String`}</p>\n    <hr></hr>\n    <p>{`//`}</p>\n    <p>{`This function takes the string provided and creates`}</p>\n    <p>{`//`}</p>\n    <h3 {...{\n      \"id\": \"formdata-type\"\n    }}>{`FormData (Type)`}</h3>\n    <hr></hr>\n    <p>{`email: String`}</p>\n    <p>{`password: String`}</p>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}